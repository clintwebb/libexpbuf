.\" man page for libexpbuf
.\" Contact dev@hyper-active.com.au to correct errors or omissions. 
.TH libexpbuf 3 "1 March 2011" "1.04" "Library for Expanding Buffer."
.SH NAME
libexpbuf \- library for an expanding buffer
.SH SYNOPSIS
.\" Syntax goes here. 
#include <expbuf.h>
.sp
typedef struct
.br
{
.br
	char *data;
.br
	unsigned int length;
.br
	unsigned int max;
.br
} 
.B expbuf_t
;
.sp

expbuf_t * 
.B expbuf_init
(expbuf_t *buf, unsigned int size)
.br
void 
.B expbuf_clear
(expbuf_t *buf)
.br
expbuf_t * 
.B expbuf_free
(expbuf_t *buf)
.br
void 
.B expbuf_add
(expbuf_t *buf, void *data, unsigned int len)
.br
void 
.B expbuf_purge
(expbuf_t *buf, unsigned int len)
.br
void 
.B expbuf_shrink
(expbuf_t *buf, unsigned int extra)
.br
char * 
.B expbuf_string
(expbuf_t *buf)
.sp
compile with the 
.B -lexpbuf
option
.SH EXAMPLES
.nf
// compile with -lexpbuf
#include <expbuf.h>

int main(void) {
	expbuf_t *buffer;
	char data[1024]];
	int len, avail;
	buffer = expbuf_init(NULL, 0);
	len = read_data(data, 1024);
	while (len >= 0) {
		expbuf_add(buffer, data, len);
		processed = process_data(BUF_DATA(buffer), BUF_LENGTH(buffer));
		expbuf_purge(buffer, processed);
		len = read_data(data);
	}
	buffer = expbuf_free(buffer);
	assert(buffer == NULL);
	return(0);
}
.fi
.SH DESCRIPTION
.B libexpbuf
is a simple library for handling an expanding buffer.  This buffer is very primative, 
and is merely a single data string (keeping track of the actual length), and a maximum 
size that has so far been allocated.
.sp
.SH FILES
.P 
.I /usr/lib/libexpbuf.so
.br
.I /usr/include/expbuf.h
.SH SEE ALSO
.BR expbuf_add (3),
.BR expbuf_clear (3),
.BR expbuf_free (3),
.BR expbuf_init (3),
.BR expbuf_purge (3),
.BR expbuf_set (3),
.BR expbuf_shrink (3),
.BR expbuf_string (3),
.BR expbuf_t (3)
.SH AUTHOR
.nf
Clint Webb (webb.clint@gmail.com)
on behalf of Hyper-Active Systems, Australia.
.br
http://www.github.com/hyper/libexpbuf/
.fi
