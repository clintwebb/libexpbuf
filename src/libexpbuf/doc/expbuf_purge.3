.\" man page for libexpbuf
.\" Contact dev@hyper-active.com.au to correct errors or omissions. 
.TH expbuf_purge 3 "23 October 2008" "1.0" "libexpbuf - Library for a simple Expanding Buffer."
.SH NAME
expbuf_purge \- Remove data from the begining of the buffer, moving any leftover data to the begining.
.SH SYNOPSIS
.B #include <expbuf.h>
.sp
.B void expbuf_purge(expbuf_t *buf, unsigned int size);
.br
.SH EXAMPLES
#include <expbuf.h>
.sp
int main(void) {
.br
	expbuf_t buffer;
.br
	char data[1024]];
.br
	int len, avail;
.sp
	expbuf_init(&buffer, 0);
.br
	len = read_data(data, 1024);
.br
	while (len >= 0) {
.br
		expbuf_add(&buffer, data, len);
.br
		processed = process_data(buffer.data, buffer.length);
.br
		expbuf_purge(&buffer, processed);
.br
		len = read_data(data);
.br
	}
.br
	expbuf_free(&buffer);
.br
	return(0);
.br
}
.SH DESCRIPTION
.B expbuf_purge()
is used to remove data from the buffer that has been processed.  In otherwords, if you have receive 1200 bytes from a socket, and you run it through a processing routinge, which indicates that it has processed 845 bytes of that data, then we need to purge those 845 byte.  The remaining bytes will be moved down to the beginning of the buffer.
.sp
If all the data in the buffer is being purged, it merely indicated that there is zero data in there.  It does not shrink or de-allocate memory.
.SH SEE ALSO
.BR libexpbuf (3),
.BR expbuf_add (3),
.BR expbuf_clear (3),
.BR expbuf_free (3),
.BR expbuf_init (3),
.BR expbuf_shrink (3),
.BR expbuf_t (3)
.SH BUGS
No known bugs at this time. 
.SH AUTHOR
.nf
Clint Webb (webb.clint@gmail.com)
on behalf of Hyper-Active Systems, Australia.
.br
http://www.hyper-active.com.au/libexpbuf/
.fi
.SH HISTORY
Oct 23, 2008 \- Initial v1.0 release made public.
