.\" man page for libexpbuf
.\" Contact dev@hyper-active.com.au to correct errors or omissions. 
.TH expbuf_free 3 "1 March 2011" "1.04" "libexpbuf - Library for a simple Expanding Buffer."
.SH NAME
expbuf_free \- clear the buffer and de-allocate memory that was allocated for it.
.SH SYNOPSIS
#include <expbuf.h>
.sp
void 
.B expbuf_free
(expbuf_t *buf);
.br
.SH EXAMPLES
.nf
#include <expbuf.h>

int main(void) {
	expbuf_t *buffer;
	char data[1024]];
	int len, avail;
	buffer = (expbuf_t *) malloc(sizeof(expbuf_t));
	expbuf_init(buffer, 0);
	len = read_data(data, 1024);
	while (len >= 0) {
		expbuf_add(buffer, data, len);
		processed = process_data(buffer->data, buffer->length);
		expbuf_purge(buffer, processed);
		len = read_data(data);
	}
	expbuf_free(buffer);
	free(buffer);
	return(0);
}
.fi
.SH DESCRIPTION
.B expbuf_free
is used to clean up the structure and de-allocate memory that was allocated for it.  
If the object was created because a NULL was passed in to expbuf_init(), 
expbuf_free will also deallocate it and return NULL.  However, if you created or 
provided the memory yourself, then you will need to clean it up, ll_free will return 
the buf pointer.
.SH SEE ALSO
.BR libexpbuf (3),
.BR expbuf_add (3),
.BR expbuf_clear (3),
.BR expbuf_init (3),
.BR expbuf_purge (3),
.BR expbuf_set (3),
.BR expbuf_shrink (3),
.BR expbuf_string (3),
.BR expbuf_t (3)
.SH AUTHOR
.nf
Clint Webb (webb.clint@gmail.com)
on behalf of Hyper-Active Systems, Australia.
.br
http://www.github.com/hyper/libexpbuf/
.fi
